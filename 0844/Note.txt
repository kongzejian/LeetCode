自己的思路，先遍历第一个字符串，如果遇到#在栈不为空的条件下弹出一个元素，再遍历第二个字符串，最后将这两个字符串比较。
别人的思路：
class Solution {
    public boolean backspaceCompare(String S, String T) {
        int i = S.length() - 1, j = T.length() - 1;
        int skipS = 0, skipT = 0;   //从尾到头向后遍历

        while (i >= 0 || j >= 0) {
            while (i >= 0) {
                if (S.charAt(i) == '#') {
                    skipS++;  //相当于一个flag，如果后一个是#，就跳过前一个字符
                    i--;
                } else if (skipS > 0) {
                    skipS--;
                    i--;
                } else {
                    break;
                }
            }
            while (j >= 0) {
                if (T.charAt(j) == '#') {
                    skipT++;
                    j--;
                } else if (skipT > 0) {
                    skipT--;
                    j--;
                } else {
                    break;
                }
            }
            if (i >= 0 && j >= 0) {
                if (S.charAt(i) != T.charAt(j)) {
                    return false; 
                }
            } else {
                if (i >= 0 || j >= 0) {
                    return false; //有一个结束了，另一个没结束，说明长度不一样，return false
                }
            }
            i--;
            j--;
        }
        return true;
    }
}
